{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "74caf2ba-1339-4d8f-89cc-31d22910d2ce",
   "metadata": {},
   "outputs": [],
   "source": [
    "die = pd.DataFrame([1, 2, 3, 4, 5, 6])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d969a051-2ff0-43cb-b869-0026eb5374f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "a0a9e49c-255d-4563-92d9-aa7861df638d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sum of dice is 8\n"
     ]
    }
   ],
   "source": [
    "die = pd.DataFrame([1, 2, 3, 4, 5, 6])\n",
    "sum_of_dice = die.sample(2, replace=True).sum().loc[0]\n",
    "print('Sum of dice is', sum_of_dice) \n",
    "# yoy may get different outcomes as we now nimicthe result of rooling 2 dice,but the range must be limited between 2 and 12."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "5f0805d0-a359-4a6f-9836-6deed9786419",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sum of the three dice 10\n"
     ]
    }
   ],
   "source": [
    "sum_of_three_dice = die.sample(3,replace = True).sum().loc[0]\n",
    "print('sum of the three dice',sum_of_three_dice)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "cae859d7-e286-4853-9bb8-2a18032208e9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10, 8, 6, 4, 4, 7, 8, 7, 7, 4]\n"
     ]
    }
   ],
   "source": [
    "# The following code mimics the roll dice game for 50 times. And the results are all stored into \"Result\"\n",
    "# Lets try and get the results of 50 sum of faces.\n",
    "trial = 50\n",
    "result= [die.sample(2,replace=True).sum().loc[0]for i in range (trial)]\n",
    "# print the frist 10 result\n",
    "print(result[ :10])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "424b9abd-dc2c-4269-82e8-c3795c6dc15a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd \n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "1ee84da1-0f97-46cc-a250-1872b9330ddf",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "die = pd.DataFrame([1, 2, 3, 4, 5, 6])\n",
    "trial = 50\n",
    "results = [die.sample(2, replace=True).sum().loc[0] for i in range(trial)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "59e4653e-ca2a-412a-bb83-87a0cfe627a7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "2      1\n",
      "3      3\n",
      "4      5\n",
      "5      4\n",
      "6     11\n",
      "7      2\n",
      "8     10\n",
      "9      5\n",
      "10     5\n",
      "11     2\n",
      "12     2\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# This is the code for summarizing the results of sum of faces by frequency\n",
    "\n",
    "freq = pd.DataFrame(results)[0].value_counts()\n",
    "sort_freq = freq.sort_index()\n",
    "print(sort_freq)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "9ca1d1d7-5aa0-4d9b-8c27-af874d73d4e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='0'>"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot the ber chart base on result\n",
    "sort_freq.plot(kind = 'bar',color = 'blue',figsize =(15,8))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "dde072b3-3c9a-4df3-a6f4-abb2e12c6af5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='0'>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# using relative frequency , I can rescale the frequency so that  i can compare results  from diffrent number of trials\n",
    "relative_freq = sort_freq /trial\n",
    "relative_freq.plot(kind='bar',color ='green',figsize=(15,8))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "646f639b-756f-4668-a465-4e787f3ff0eb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='0'>"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# let us try to incrase the number of trials to 10000, and see what will happen...\n",
    "trial = 1000\n",
    "result = [die.sample(2,replace = True).sum().loc[0] for i in range(trial)]\n",
    "freq = pd.DataFrame (result)[0].value_counts()\n",
    "sort_freq =freq.sort_index()\n",
    "relative_freq = sort_freq/trial\n",
    "relative_freq.plot(kind='bar',color='green',figsize =(15,8))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "fa22fb3d-3f09-46f8-bcc7-00cf835facff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>prob</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.027778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.055556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.083333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.111111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.138889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.166667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.138889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.111111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.083333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.055556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.027778</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        prob\n",
       "2   0.027778\n",
       "3   0.055556\n",
       "4   0.083333\n",
       "5   0.111111\n",
       "6   0.138889\n",
       "7   0.166667\n",
       "8   0.138889\n",
       "9   0.111111\n",
       "10  0.083333\n",
       "11  0.055556\n",
       "12  0.027778"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# assume that we have fair dice, which means all faces will be shown with equal probability\n",
    "# then we can say we know the 'Distribtuion' of the random variable - sum_of_dice\n",
    "X_distri = pd. DataFrame (index=[2,3,4,5,6,7,8,9,10,11,12])\n",
    "X_distri['prob'] = [1,2,3,4,5,6,5,4,3,2,1]\n",
    "X_distri['prob'] = X_distri['prob']/36\n",
    "X_distri"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "b0a88858-89b3-439c-b6d3-3bc60a6c8112",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "6.999999999999998 5.833333333333333\n"
     ]
    }
   ],
   "source": [
    "mean = pd.Series(X_distri.index* X_distri['prob']).sum()\n",
    "var = pd .Series(((X_distri.index - mean)**2)*X_distri['prob']).sum()\n",
    "# output the mean and variance of the distribution . mean and variance can be used to discribe a distribution\n",
    "print(mean,var)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "ad999959-127a-4ed6-a4a5-6b2e47ebc53c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# if we calculate mean and variance of outcomes (with high enough number of trials, eg 20000)...\n",
    "trial = 20000\n",
    "results = [die.sample(2, replace=True).sum().loc[0] for i in range(trial)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "a1dd6ffc-1a34-4db2-b517-e43c121d3d92",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7.002 6.00800400400403\n"
     ]
    }
   ],
   "source": [
    "# print the mean varience of the 20000 trials ..\n",
    "result = pd .Series (result)\n",
    "print(result.mean(),result.var())"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
